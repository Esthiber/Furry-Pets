// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawfectMatch.Data;

#nullable disable

namespace PawfectMatch.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PawfectMatch.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.AdoptantesDetalles", b =>
                {
                    b.Property<int>("AdoptantesDetallesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdoptantesDetallesID"));

                    b.Property<int?>("HorasAusentes")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NotasJardin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NotasOtrasMascotas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.Property<string>("RazonAdopcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TieneJardin")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneOtrasMascotas")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoViviendasID")
                        .HasColumnType("int");

                    b.Property<bool>("ViveEnViviendaAlquilada")
                        .HasColumnType("bit");

                    b.HasKey("AdoptantesDetallesID");

                    b.HasIndex("PersonasID");

                    b.HasIndex("TipoViviendasID");

                    b.ToTable("AdoptantesDetalles");
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.EstadoMascota", b =>
                {
                    b.Property<int>("EstadoMascotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoMascotaID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EstadoMascotaID");

                    b.ToTable("EstadoMascota");

                    b.HasData(
                        new
                        {
                            EstadoMascotaID = 1,
                            IsDeleted = false,
                            Nombre = "Sano"
                        },
                        new
                        {
                            EstadoMascotaID = 2,
                            IsDeleted = false,
                            Nombre = "Enfermo"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.HistorialAdopciones", b =>
                {
                    b.Property<int>("HistorialAdopcionesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistorialAdopcionesID"));

                    b.Property<DateTime>("FechaAdopcion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MascotasAdopcionID")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SolicitudesAdopcionesID")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudesAdopcionesID1")
                        .HasColumnType("int");

                    b.HasKey("HistorialAdopcionesID");

                    b.HasIndex("MascotasAdopcionID");

                    b.HasIndex("SolicitudesAdopcionesID");

                    b.HasIndex("SolicitudesAdopcionesID1");

                    b.ToTable("HistorialAdopciones");
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.MascotasAdopcion", b =>
                {
                    b.Property<int>("MascotasAdopcionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MascotasAdopcionID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EspeciesID")
                        .HasColumnType("int");

                    b.Property<int>("EstadoID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("FotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RazasID")
                        .HasColumnType("int");

                    b.Property<int>("RelacionSizeID")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("Tamanio")
                        .HasColumnType("int");

                    b.HasKey("MascotasAdopcionID");

                    b.HasIndex("EspeciesID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("RazasID");

                    b.HasIndex("RelacionSizeID");

                    b.ToTable("MascotasAdopcion");

                    b.HasData(
                        new
                        {
                            MascotasAdopcionID = 1,
                            Descripcion = "Cachorrita juguetona y muy cariñosa con niños.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2023, 5, 10),
                            FotoURL = "https://images.unsplash.com/photo-1583511655826-05700d52f4ae",
                            IsDeleted = false,
                            Nombre = "Luna",
                            RazasID = 1,
                            RelacionSizeID = 1,
                            Sexo = "f",
                            Tamanio = 1
                        },
                        new
                        {
                            MascotasAdopcionID = 2,
                            Descripcion = "Perro guardián y muy leal. Ideal para casas grandes.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2022, 11, 15),
                            FotoURL = "https://images.unsplash.com/photo-1601758123927-196f76f75097",
                            IsDeleted = false,
                            Nombre = "Rocky",
                            RazasID = 2,
                            RelacionSizeID = 2,
                            Sexo = "m",
                            Tamanio = 2
                        },
                        new
                        {
                            MascotasAdopcionID = 3,
                            Descripcion = "Gatita rescatada muy tranquila y sociable.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2024, 2, 1),
                            FotoURL = "https://images.unsplash.com/photo-1592194996308-7b43878e84a6",
                            IsDeleted = false,
                            Nombre = "Mia",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "f",
                            Tamanio = 3
                        },
                        new
                        {
                            MascotasAdopcionID = 4,
                            Descripcion = "Perro fuerte, entrenado y excelente para seguridad.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2021, 8, 20),
                            FotoURL = "https://images.unsplash.com/photo-1583511655826-05700d52f4ae",
                            IsDeleted = false,
                            Nombre = "Zeus",
                            RazasID = 2,
                            RelacionSizeID = 3,
                            Sexo = "m",
                            Tamanio = 5
                        },
                        new
                        {
                            MascotasAdopcionID = 5,
                            Descripcion = "Muy energética y necesita mucho ejercicio diario.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2023, 1, 30),
                            FotoURL = "https://images.unsplash.com/photo-1601758003122-58eacb8e3ed1",
                            IsDeleted = false,
                            Nombre = "Nala",
                            RazasID = 1,
                            RelacionSizeID = 2,
                            Sexo = "f",
                            Tamanio = 5
                        },
                        new
                        {
                            MascotasAdopcionID = 6,
                            Descripcion = "Gatito curioso y muy juguetón.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2024, 4, 15),
                            FotoURL = "https://images.unsplash.com/photo-1592194996308-7b43878e84a6",
                            IsDeleted = false,
                            Nombre = "Simba",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "m",
                            Tamanio = 2
                        },
                        new
                        {
                            MascotasAdopcionID = 7,
                            Descripcion = "Gran danés amoroso y obediente.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2022, 6, 18),
                            FotoURL = "https://images.unsplash.com/photo-1583511655826-05700d52f4ae",
                            IsDeleted = false,
                            Nombre = "Thor",
                            RazasID = 2,
                            RelacionSizeID = 3,
                            Sexo = "m",
                            Tamanio = 4
                        },
                        new
                        {
                            MascotasAdopcionID = 8,
                            Descripcion = "Gatita blanca, ideal para compañía.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2023, 7, 9),
                            FotoURL = "https://images.unsplash.com/photo-1580377969203-4ec1eac6d5fe",
                            IsDeleted = false,
                            Nombre = "Lili",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "f",
                            Tamanio = 5
                        },
                        new
                        {
                            MascotasAdopcionID = 9,
                            Descripcion = "Obediente y perfecto para familias con niños.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2021, 9, 12),
                            FotoURL = "https://images.unsplash.com/photo-1558788353-f76d92427f16",
                            IsDeleted = false,
                            Nombre = "Max",
                            RazasID = 1,
                            RelacionSizeID = 2,
                            Sexo = "m",
                            Tamanio = 5
                        },
                        new
                        {
                            MascotasAdopcionID = 10,
                            Descripcion = "Gatita siamesa muy elegante.",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2024, 3, 22),
                            FotoURL = "https://images.unsplash.com/photo-1574158622682-e40e69881006",
                            IsDeleted = false,
                            Nombre = "Cleo",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "f",
                            Tamanio = 4
                        },
                        new
                        {
                            MascotasAdopcionID = 11,
                            Descripcion = "Perro juguetón",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2022, 1, 1),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Toby",
                            RazasID = 1,
                            RelacionSizeID = 1,
                            Sexo = "m",
                            Tamanio = 1
                        },
                        new
                        {
                            MascotasAdopcionID = 12,
                            Descripcion = "Perra tranquila",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2021, 2, 2),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Bella",
                            RazasID = 2,
                            RelacionSizeID = 2,
                            Sexo = "f",
                            Tamanio = 2
                        },
                        new
                        {
                            MascotasAdopcionID = 13,
                            Descripcion = "Gato curioso",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2020, 3, 3),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Tom",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "m",
                            Tamanio = 3
                        },
                        new
                        {
                            MascotasAdopcionID = 14,
                            Descripcion = "Perra activa",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2019, 4, 4),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Lola",
                            RazasID = 1,
                            RelacionSizeID = 2,
                            Sexo = "f",
                            Tamanio = 2
                        },
                        new
                        {
                            MascotasAdopcionID = 15,
                            Descripcion = "Perro guardián",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2018, 5, 5),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Rex",
                            RazasID = 2,
                            RelacionSizeID = 3,
                            Sexo = "m",
                            Tamanio = 3
                        },
                        new
                        {
                            MascotasAdopcionID = 16,
                            Descripcion = "Gata cariñosa",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2017, 6, 6),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Nina",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "f",
                            Tamanio = 1
                        },
                        new
                        {
                            MascotasAdopcionID = 17,
                            Descripcion = "Perro inteligente",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2016, 7, 7),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Leo",
                            RazasID = 1,
                            RelacionSizeID = 2,
                            Sexo = "m",
                            Tamanio = 2
                        },
                        new
                        {
                            MascotasAdopcionID = 18,
                            Descripcion = "Perra fiel",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2015, 8, 8),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Maya",
                            RazasID = 2,
                            RelacionSizeID = 3,
                            Sexo = "f",
                            Tamanio = 3
                        },
                        new
                        {
                            MascotasAdopcionID = 19,
                            Descripcion = "Gato dormilón",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2014, 9, 9),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Simón",
                            RazasID = 3,
                            RelacionSizeID = 1,
                            Sexo = "m",
                            Tamanio = 1
                        },
                        new
                        {
                            MascotasAdopcionID = 20,
                            Descripcion = "Perra juguetona",
                            EstadoID = 2,
                            FechaNacimiento = new DateOnly(2013, 10, 10),
                            FotoURL = "",
                            IsDeleted = false,
                            Nombre = "Daisy",
                            RazasID = 1,
                            RelacionSizeID = 2,
                            Sexo = "f",
                            Tamanio = 2
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.Citas", b =>
                {
                    b.Property<int>("CitasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitasID"));

                    b.Property<int>("EstadosCitasID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MascotasPersonasID")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.HasKey("CitasID");

                    b.HasIndex("EstadosCitasID");

                    b.HasIndex("MascotasPersonasID");

                    b.HasIndex("PersonasID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("PawfectMatch.Models.ConfiguracionEmpresa", b =>
                {
                    b.Property<int>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaID"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmpresaID");

                    b.ToTable("ConfiguracionEmpresa");
                });

            modelBuilder.Entity("PawfectMatch.Models.Especies", b =>
                {
                    b.Property<int>("EspeciesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspeciesID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EspeciesID");

                    b.ToTable("Especies");

                    b.HasData(
                        new
                        {
                            EspeciesID = 1,
                            IsDeleted = false,
                            Nombre = "Gato"
                        },
                        new
                        {
                            EspeciesID = 2,
                            IsDeleted = false,
                            Nombre = "Perro"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.EstadoSolicitud", b =>
                {
                    b.Property<int>("EstadoSolicitudID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoSolicitudID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EstadoSolicitudID");

                    b.ToTable("EstadoSolicitud");

                    b.HasData(
                        new
                        {
                            EstadoSolicitudID = 1,
                            IsDeleted = false,
                            Nombre = "Aprobada"
                        },
                        new
                        {
                            EstadoSolicitudID = 2,
                            IsDeleted = false,
                            Nombre = "En Revision"
                        },
                        new
                        {
                            EstadoSolicitudID = 3,
                            IsDeleted = false,
                            Nombre = "Rechazada"
                        },
                        new
                        {
                            EstadoSolicitudID = 4,
                            IsDeleted = false,
                            Nombre = "En Espera"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.Estados", b =>
                {
                    b.Property<int>("EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EstadoID");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            EstadoID = 1,
                            IsDeleted = false,
                            Nombre = "Adoptado"
                        },
                        new
                        {
                            EstadoID = 2,
                            IsDeleted = false,
                            Nombre = "Disponible"
                        },
                        new
                        {
                            EstadoID = 3,
                            IsDeleted = false,
                            Nombre = "No Disponible"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.EstadosCitas", b =>
                {
                    b.Property<int>("EstadosCitasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadosCitasID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EstadosCitasID");

                    b.ToTable("EstadosCitas");

                    b.HasData(
                        new
                        {
                            EstadosCitasID = 1,
                            IsDeleted = false,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            EstadosCitasID = 2,
                            IsDeleted = false,
                            Nombre = "Confirmada"
                        },
                        new
                        {
                            EstadosCitasID = 3,
                            IsDeleted = false,
                            Nombre = "Cancelada"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.HistoriasClinicas", b =>
                {
                    b.Property<int>("HistoriasClinicaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoriasClinicaID"));

                    b.Property<string>("DescripcionVisita")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MascotasPersonasID")
                        .HasColumnType("int");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("HistoriasClinicaID");

                    b.HasIndex("MascotasPersonasID");

                    b.HasIndex("PersonasID");

                    b.ToTable("HistoriasClinicas");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.CategoriasProductos", b =>
                {
                    b.Property<int>("CategoriasProductosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriasProductosID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriasProductosID");

                    b.ToTable("CategoriasProductos");

                    b.HasData(
                        new
                        {
                            CategoriasProductosID = 1,
                            IsDeleted = false,
                            Nombre = "Alimentos"
                        },
                        new
                        {
                            CategoriasProductosID = 2,
                            IsDeleted = false,
                            Nombre = "Accesorios"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.DetallesFacturas", b =>
                {
                    b.Property<int>("DetallesFacturasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesFacturasID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturasID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TiposItemsID")
                        .HasColumnType("int");

                    b.HasKey("DetallesFacturasID");

                    b.HasIndex("FacturasID");

                    b.HasIndex("TiposItemsID");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.EstadosPagos", b =>
                {
                    b.Property<int>("EstadosPagosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadosPagosID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EstadosPagosID");

                    b.ToTable("EstadosPagos");

                    b.HasData(
                        new
                        {
                            EstadosPagosID = 1,
                            IsDeleted = false,
                            Nombre = "Pagado"
                        },
                        new
                        {
                            EstadosPagosID = 2,
                            IsDeleted = false,
                            Nombre = "Pendiente"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Facturas", b =>
                {
                    b.Property<int>("FacturasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturasID"));

                    b.Property<int>("EstadoPagoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FacturasID");

                    b.HasIndex("EstadoPagoID");

                    b.HasIndex("PersonasID");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Pagos", b =>
                {
                    b.Property<int>("PagosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagosID"));

                    b.Property<int>("FacturasID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PagosID");

                    b.HasIndex("FacturasID");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Productos", b =>
                {
                    b.Property<int>("ProductosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductosID"));

                    b.Property<int>("CategoriasProductosID")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProveedoresID")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductosID");

                    b.HasIndex("CategoriasProductosID");

                    b.HasIndex("ProveedoresID");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductosID = 1,
                            CategoriasProductosID = 1,
                            Costo = 10.00m,
                            Descripcion = "Croquetas nutritivas para perros adultos.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9sci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Croquetas Premium",
                            Precio = 18.99m,
                            ProveedoresID = 1,
                            Stock = 50
                        },
                        new
                        {
                            ProductosID = 2,
                            CategoriasProductosID = 1,
                            Costo = 2.50m,
                            Descripcion = "Lata de comida gourmet para gatos exigentes.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Comida Húmeda para Gato",
                            Precio = 4.99m,
                            ProveedoresID = 1,
                            Stock = 100
                        },
                        new
                        {
                            ProductosID = 3,
                            CategoriasProductosID = 2,
                            Costo = 15.00m,
                            Descripcion = "Collar rastreador para mascotas medianas.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Collar con GPS",
                            Precio = 29.99m,
                            ProveedoresID = 1,
                            Stock = 25
                        },
                        new
                        {
                            ProductosID = 4,
                            CategoriasProductosID = 2,
                            Costo = 12.00m,
                            Descripcion = "Cama acolchonada ideal para gatos y perros pequeños.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Cama para Mascotas",
                            Precio = 24.99m,
                            ProveedoresID = 1,
                            Stock = 30
                        },
                        new
                        {
                            ProductosID = 5,
                            CategoriasProductosID = 1,
                            Costo = 3.00m,
                            Descripcion = "Galletas orgánicas para entrenamiento.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Snack Natural",
                            Precio = 6.50m,
                            ProveedoresID = 1,
                            Stock = 80
                        },
                        new
                        {
                            ProductosID = 6,
                            CategoriasProductosID = 2,
                            Costo = 1.80m,
                            Descripcion = "Pelota para perros que emite sonidos al morderla.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Juguete Pelota Sonora",
                            Precio = 4.00m,
                            ProveedoresID = 1,
                            Stock = 60
                        },
                        new
                        {
                            ProductosID = 7,
                            CategoriasProductosID = 1,
                            Costo = 5.00m,
                            Descripcion = "Suplemento lácteo para crías sin madre.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Leche para Cachorros",
                            Precio = 9.99m,
                            ProveedoresID = 1,
                            Stock = 45
                        },
                        new
                        {
                            ProductosID = 8,
                            CategoriasProductosID = 2,
                            Costo = 6.00m,
                            Descripcion = "Correa extensible hasta 5 metros.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Correa Retráctil",
                            Precio = 12.99m,
                            ProveedoresID = 1,
                            Stock = 40
                        },
                        new
                        {
                            ProductosID = 9,
                            CategoriasProductosID = 2,
                            Costo = 8.00m,
                            Descripcion = "Rascador vertical de sisal natural.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Rascador para Gato",
                            Precio = 15.50m,
                            ProveedoresID = 1,
                            Stock = 20
                        },
                        new
                        {
                            ProductosID = 10,
                            CategoriasProductosID = 1,
                            Costo = 4.00m,
                            Descripcion = "Complemento vitamínico para perros y gatos.",
                            ImagenUrl = "https://images.rawpixel.com/image_800/cHJpbmF0ZS9zci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTExL3BmLXMxMDgtcG0tNDExMy1tb2NrdXAuanBn.jpg",
                            IsDeleted = false,
                            Nombre = "Vitaminas para Mascotas",
                            Precio = 8.50m,
                            ProveedoresID = 1,
                            Stock = 70
                        },
                        new
                        {
                            ProductosID = 11,
                            CategoriasProductosID = 1,
                            Costo = 12.00m,
                            Descripcion = "Croquetas de alta calidad para perros deportivos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Croquetas Superiores",
                            Precio = 22.50m,
                            ProveedoresID = 1,
                            Stock = 40
                        },
                        new
                        {
                            ProductosID = 12,
                            CategoriasProductosID = 1,
                            Costo = 3.00m,
                            Descripcion = "Deliciosa pasta de atún para consentir a tu gato.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Pasta de Atún para Gato",
                            Precio = 6.00m,
                            ProveedoresID = 1,
                            Stock = 90
                        },
                        new
                        {
                            ProductosID = 13,
                            CategoriasProductosID = 2,
                            Costo = 15.00m,
                            Descripcion = "Arnés ajustable y cómodo para perros de todos los tamaños.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Arnés para Perro",
                            Precio = 28.50m,
                            ProveedoresID = 1,
                            Stock = 35
                        },
                        new
                        {
                            ProductosID = 14,
                            CategoriasProductosID = 2,
                            Costo = 5.00m,
                            Descripcion = "Entretenido juguete para mantener activo a tu gato.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Juguete Interactivo para Gato",
                            Precio = 10.99m,
                            ProveedoresID = 1,
                            Stock = 25
                        },
                        new
                        {
                            ProductosID = 15,
                            CategoriasProductosID = 1,
                            Costo = 2.50m,
                            Descripcion = "Deliciosos snacks de pollo para premiar a tu perro.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Snacks de Pollo para Perro",
                            Precio = 5.50m,
                            ProveedoresID = 1,
                            Stock = 100
                        },
                        new
                        {
                            ProductosID = 16,
                            CategoriasProductosID = 2,
                            Costo = 8.00m,
                            Descripcion = "Cepillo de masaje para perros y gatos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Cepillo para Mascotas",
                            Precio = 15.00m,
                            ProveedoresID = 1,
                            Stock = 60
                        },
                        new
                        {
                            ProductosID = 17,
                            CategoriasProductosID = 1,
                            Costo = 25.00m,
                            Descripcion = "Suplemento para mejorar la salud articular de tu perro.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Suplemento Articular para Perros",
                            Precio = 40.00m,
                            ProveedoresID = 1,
                            Stock = 20
                        },
                        new
                        {
                            ProductosID = 18,
                            CategoriasProductosID = 2,
                            Costo = 10.00m,
                            Descripcion = "Protege a tu mascota de pulgas y garrapatas.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Collar anti pulgas y garrapatas",
                            Precio = 18.00m,
                            ProveedoresID = 1,
                            Stock = 15
                        },
                        new
                        {
                            ProductosID = 19,
                            CategoriasProductosID = 1,
                            Costo = 30.00m,
                            Descripcion = "Nutrición completa en un formato deshidratado fácil de servir.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Alimento Deshidratado para Perros",
                            Precio = 50.00m,
                            ProveedoresID = 1,
                            Stock = 10
                        },
                        new
                        {
                            ProductosID = 20,
                            CategoriasProductosID = 2,
                            Costo = 7.50m,
                            Descripcion = "Arena absorbente y control de olores para gatos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Arena sanitaria para gatos",
                            Precio = 15.00m,
                            ProveedoresID = 1,
                            Stock = 55
                        },
                        new
                        {
                            ProductosID = 21,
                            CategoriasProductosID = 1,
                            Costo = 20.00m,
                            Descripcion = "Elimina y previene pulgas en perros.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Tratamiento Antipulgas Spot-On Perros",
                            Precio = 35.00m,
                            ProveedoresID = 1,
                            Stock = 25
                        },
                        new
                        {
                            ProductosID = 22,
                            CategoriasProductosID = 2,
                            Costo = 5.00m,
                            Descripcion = "Escapulario con protección contra los malos espíritus.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Escapulario para Perros",
                            Precio = 10.00m,
                            ProveedoresID = 1,
                            Stock = 75
                        },
                        new
                        {
                            ProductosID = 23,
                            CategoriasProductosID = 1,
                            Costo = 35.00m,
                            Descripcion = "Antibióticos de amplio espectro para infecciones en mascotas.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Antibióticos para Mascotas",
                            Precio = 55.00m,
                            ProveedoresID = 1,
                            Stock = 5
                        },
                        new
                        {
                            ProductosID = 24,
                            CategoriasProductosID = 2,
                            Costo = 15.00m,
                            Descripcion = "Suplemento de Omega 3 para piel y pelaje saludable.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Cápsulas de Omega 3 para Mascotas",
                            Precio = 25.00m,
                            ProveedoresID = 1,
                            Stock = 30
                        },
                        new
                        {
                            ProductosID = 25,
                            CategoriasProductosID = 1,
                            Costo = 18.00m,
                            Descripcion = "Mejora la salud digestiva y el sistema inmunológico.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Suplemento Probiótico para Perros",
                            Precio = 32.00m,
                            ProveedoresID = 1,
                            Stock = 20
                        },
                        new
                        {
                            ProductosID = 26,
                            CategoriasProductosID = 2,
                            Costo = 4.00m,
                            Descripcion = "Rascador de cartón reciclable, atrae gatos por su olor.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Rascador de Cartón para Gato",
                            Precio = 8.50m,
                            ProveedoresID = 1,
                            Stock = 100
                        },
                        new
                        {
                            ProductosID = 27,
                            CategoriasProductosID = 1,
                            Costo = 7.00m,
                            Descripcion = "Solución limpiadora para oídos de perros.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Limpiador de Oídos para Perros",
                            Precio = 15.00m,
                            ProveedoresID = 1,
                            Stock = 45
                        },
                        new
                        {
                            ProductosID = 28,
                            CategoriasProductosID = 2,
                            Costo = 6.00m,
                            Descripcion = "Reduce la caída del pelo en gatos de pelo largo.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Peine Deshedding para Gato",
                            Precio = 12.00m,
                            ProveedoresID = 1,
                            Stock = 55
                        },
                        new
                        {
                            ProductosID = 29,
                            CategoriasProductosID = 1,
                            Costo = 11.00m,
                            Descripcion = "Champú efectivo contra pulgas, garrapatas y mosquitos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Champú Antiinsectos para Mascotas",
                            Precio = 22.00m,
                            ProveedoresID = 1,
                            Stock = 35
                        },
                        new
                        {
                            ProductosID = 30,
                            CategoriasProductosID = 2,
                            Costo = 20.00m,
                            Descripcion = "Bolsa transportadora cómoda y segura para mascotas pequeñas.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Bolsa de Transporte para Mascotas",
                            Precio = 35.00m,
                            ProveedoresID = 1,
                            Stock = 15
                        },
                        new
                        {
                            ProductosID = 31,
                            CategoriasProductosID = 1,
                            Costo = 28.00m,
                            Descripcion = "Nutrición balanceada para perros mayores de 7 años.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Alimento Balanceado para Perro Mayor",
                            Precio = 48.00m,
                            ProveedoresID = 1,
                            Stock = 10
                        },
                        new
                        {
                            ProductosID = 32,
                            CategoriasProductosID = 1,
                            Costo = 4.00m,
                            Descripcion = "Snack para ayudar a mantener los dientes limpios.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Snack Dental para Perros",
                            Precio = 7.50m,
                            ProveedoresID = 1,
                            Stock = 85
                        },
                        new
                        {
                            ProductosID = 33,
                            CategoriasProductosID = 2,
                            Costo = 50.00m,
                            Descripcion = "Transportín resistente con doble puerta para fácil acceso.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Transportin Doble Puerta",
                            Precio = 85.00m,
                            ProveedoresID = 1,
                            Stock = 8
                        },
                        new
                        {
                            ProductosID = 34,
                            CategoriasProductosID = 2,
                            Costo = 15.00m,
                            Descripcion = "Manta que proporciona calor y confort a tu mascota.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Manta Térmica para Perros",
                            Precio = 25.00m,
                            ProveedoresID = 1,
                            Stock = 40
                        },
                        new
                        {
                            ProductosID = 35,
                            CategoriasProductosID = 1,
                            Costo = 14.00m,
                            Descripcion = "Alta en proteínas, especial para gatos carnívoros.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Comida Carnivora para Gato",
                            Precio = 28.00m,
                            ProveedoresID = 1,
                            Stock = 20
                        },
                        new
                        {
                            ProductosID = 36,
                            CategoriasProductosID = 1,
                            Costo = 6.50m,
                            Descripcion = "Batido complemento alimenticio para mascotas.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Batido Nutricional para Mascotas",
                            Precio = 14.00m,
                            ProveedoresID = 1,
                            Stock = 50
                        },
                        new
                        {
                            ProductosID = 37,
                            CategoriasProductosID = 2,
                            Costo = 5.50m,
                            Descripcion = "Ideal para desenredar pelajes largos y gruesos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Peine de Dientes Anchos",
                            Precio = 11.00m,
                            ProveedoresID = 1,
                            Stock = 75
                        },
                        new
                        {
                            ProductosID = 38,
                            CategoriasProductosID = 2,
                            Costo = 10.00m,
                            Descripcion = "Fragancia especial para el pelaje de tus mascotas.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Perfume para Mascotas",
                            Precio = 18.00m,
                            ProveedoresID = 1,
                            Stock = 30
                        },
                        new
                        {
                            ProductosID = 39,
                            CategoriasProductosID = 1,
                            Costo = 20.00m,
                            Descripcion = "Especial para gatos esterilizados, control de peso.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Alimento Seco para Gato Esterilizado",
                            Precio = 35.00m,
                            ProveedoresID = 1,
                            Stock = 15
                        },
                        new
                        {
                            ProductosID = 40,
                            CategoriasProductosID = 2,
                            Costo = 3.00m,
                            Descripcion = "Juguete interactivo para estimular el ejercicio en gatos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Juguete de Plumas para Gato",
                            Precio = 7.00m,
                            ProveedoresID = 1,
                            Stock = 95
                        },
                        new
                        {
                            ProductosID = 41,
                            CategoriasProductosID = 1,
                            Costo = 8.00m,
                            Descripcion = "Fortalece los huesos y dientes de tu mascota.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Suplemento de Calcio para Mascotas",
                            Precio = 15.00m,
                            ProveedoresID = 1,
                            Stock = 40
                        },
                        new
                        {
                            ProductosID = 42,
                            CategoriasProductosID = 2,
                            Costo = 55.00m,
                            Descripcion = "Transportín aprobado por aerolíneas, seguro y cómodo.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Transportín Airline Approved",
                            Precio = 95.00m,
                            ProveedoresID = 1,
                            Stock = 12
                        },
                        new
                        {
                            ProductosID = 43,
                            CategoriasProductosID = 1,
                            Costo = 4.00m,
                            Descripcion = "Delicioso y saludable snack de cordero.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Snack de Cordero para Perros",
                            Precio = 8.00m,
                            ProveedoresID = 1,
                            Stock = 85
                        },
                        new
                        {
                            ProductosID = 44,
                            CategoriasProductosID = 2,
                            Costo = 45.00m,
                            Descripcion = "Cama ortopédica para el cuidado de las articulaciones.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Cama ortopédica para Mascotas",
                            Precio = 75.00m,
                            ProveedoresID = 1,
                            Stock = 20
                        },
                        new
                        {
                            ProductosID = 45,
                            CategoriasProductosID = 1,
                            Costo = 18.00m,
                            Descripcion = "Alimento natural y balanceado para gatos.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Comida para Gato de Palmas",
                            Precio = 30.00m,
                            ProveedoresID = 1,
                            Stock = 15
                        },
                        new
                        {
                            ProductosID = 46,
                            CategoriasProductosID = 2,
                            Costo = 12.00m,
                            Descripcion = "Protege a tu mascota de la lluvia y la humedad.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Bolsa de Transporte Impermeable",
                            Precio = 22.00m,
                            ProveedoresID = 1,
                            Stock = 30
                        },
                        new
                        {
                            ProductosID = 47,
                            CategoriasProductosID = 1,
                            Costo = 5.00m,
                            Descripcion = "Snacks hipoalergénicos de arroz para perros sensibles.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Galletas de Arroz para Perros",
                            Precio = 10.00m,
                            ProveedoresID = 1,
                            Stock = 100
                        },
                        new
                        {
                            ProductosID = 48,
                            CategoriasProductosID = 2,
                            Costo = 10.50m,
                            Descripcion = "Juguete dispensador de comida para mantener a tu perro entretenido.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Juguete para Perro con Comida Seca",
                            Precio = 19.99m,
                            ProveedoresID = 1,
                            Stock = 25
                        },
                        new
                        {
                            ProductosID = 49,
                            CategoriasProductosID = 1,
                            Costo = 8.00m,
                            Descripcion = "Pañales desechables para perros machos y hembras.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Pañales Desechables para Perros",
                            Precio = 15.00m,
                            ProveedoresID = 1,
                            Stock = 60
                        },
                        new
                        {
                            ProductosID = 50,
                            CategoriasProductosID = 2,
                            Costo = 9.00m,
                            Descripcion = "Correa resistente para perros de razas grandes.",
                            ImagenUrl = "https://via.placeholder.com/150",
                            IsDeleted = false,
                            Nombre = "Correa de Mano para Perros Grande",
                            Precio = 17.00m,
                            ProveedoresID = 1,
                            Stock = 35
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.ProductosInTabs", b =>
                {
                    b.Property<int>("ProductosInTabsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductosInTabsID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("ProductosID")
                        .HasColumnType("int");

                    b.Property<int>("VetasTabsID")
                        .HasColumnType("int");

                    b.HasKey("ProductosInTabsID");

                    b.HasIndex("ProductosID");

                    b.HasIndex("VetasTabsID");

                    b.ToTable("ProductosInTabs");

                    b.HasData(
                        new
                        {
                            ProductosInTabsID = 1,
                            IsDeleted = false,
                            Orden = 1,
                            ProductosID = 1,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 2,
                            IsDeleted = false,
                            Orden = 2,
                            ProductosID = 2,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 3,
                            IsDeleted = false,
                            Orden = 3,
                            ProductosID = 3,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 4,
                            IsDeleted = false,
                            Orden = 4,
                            ProductosID = 4,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 5,
                            IsDeleted = false,
                            Orden = 5,
                            ProductosID = 5,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 6,
                            IsDeleted = false,
                            Orden = 6,
                            ProductosID = 6,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 7,
                            IsDeleted = false,
                            Orden = 7,
                            ProductosID = 7,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 8,
                            IsDeleted = false,
                            Orden = 8,
                            ProductosID = 8,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 9,
                            IsDeleted = false,
                            Orden = 9,
                            ProductosID = 9,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 10,
                            IsDeleted = false,
                            Orden = 10,
                            ProductosID = 10,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 11,
                            IsDeleted = false,
                            Orden = 11,
                            ProductosID = 11,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 12,
                            IsDeleted = false,
                            Orden = 12,
                            ProductosID = 12,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 13,
                            IsDeleted = false,
                            Orden = 13,
                            ProductosID = 13,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 14,
                            IsDeleted = false,
                            Orden = 14,
                            ProductosID = 14,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 15,
                            IsDeleted = false,
                            Orden = 15,
                            ProductosID = 15,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 16,
                            IsDeleted = false,
                            Orden = 16,
                            ProductosID = 16,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 17,
                            IsDeleted = false,
                            Orden = 17,
                            ProductosID = 17,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 18,
                            IsDeleted = false,
                            Orden = 18,
                            ProductosID = 18,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 19,
                            IsDeleted = false,
                            Orden = 19,
                            ProductosID = 19,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 20,
                            IsDeleted = false,
                            Orden = 20,
                            ProductosID = 20,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 21,
                            IsDeleted = false,
                            Orden = 21,
                            ProductosID = 21,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 22,
                            IsDeleted = false,
                            Orden = 22,
                            ProductosID = 22,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 23,
                            IsDeleted = false,
                            Orden = 23,
                            ProductosID = 23,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 24,
                            IsDeleted = false,
                            Orden = 24,
                            ProductosID = 24,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 25,
                            IsDeleted = false,
                            Orden = 25,
                            ProductosID = 25,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 26,
                            IsDeleted = false,
                            Orden = 26,
                            ProductosID = 26,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 27,
                            IsDeleted = false,
                            Orden = 27,
                            ProductosID = 27,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 28,
                            IsDeleted = false,
                            Orden = 28,
                            ProductosID = 28,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 29,
                            IsDeleted = false,
                            Orden = 29,
                            ProductosID = 29,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 30,
                            IsDeleted = false,
                            Orden = 30,
                            ProductosID = 30,
                            VetasTabsID = 1
                        },
                        new
                        {
                            ProductosInTabsID = 31,
                            IsDeleted = false,
                            Orden = 31,
                            ProductosID = 31,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 32,
                            IsDeleted = false,
                            Orden = 32,
                            ProductosID = 32,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 33,
                            IsDeleted = false,
                            Orden = 33,
                            ProductosID = 33,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 34,
                            IsDeleted = false,
                            Orden = 34,
                            ProductosID = 34,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 35,
                            IsDeleted = false,
                            Orden = 35,
                            ProductosID = 35,
                            VetasTabsID = 2
                        },
                        new
                        {
                            ProductosInTabsID = 36,
                            IsDeleted = false,
                            Orden = 36,
                            ProductosID = 36,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 37,
                            IsDeleted = false,
                            Orden = 37,
                            ProductosID = 37,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 38,
                            IsDeleted = false,
                            Orden = 38,
                            ProductosID = 38,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 39,
                            IsDeleted = false,
                            Orden = 39,
                            ProductosID = 39,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 40,
                            IsDeleted = false,
                            Orden = 40,
                            ProductosID = 40,
                            VetasTabsID = 3
                        },
                        new
                        {
                            ProductosInTabsID = 41,
                            IsDeleted = false,
                            Orden = 41,
                            ProductosID = 41,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 42,
                            IsDeleted = false,
                            Orden = 42,
                            ProductosID = 42,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 43,
                            IsDeleted = false,
                            Orden = 43,
                            ProductosID = 43,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 44,
                            IsDeleted = false,
                            Orden = 44,
                            ProductosID = 44,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 45,
                            IsDeleted = false,
                            Orden = 45,
                            ProductosID = 45,
                            VetasTabsID = 4
                        },
                        new
                        {
                            ProductosInTabsID = 46,
                            IsDeleted = false,
                            Orden = 46,
                            ProductosID = 46,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 47,
                            IsDeleted = false,
                            Orden = 47,
                            ProductosID = 47,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 48,
                            IsDeleted = false,
                            Orden = 48,
                            ProductosID = 48,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 49,
                            IsDeleted = false,
                            Orden = 49,
                            ProductosID = 49,
                            VetasTabsID = 5
                        },
                        new
                        {
                            ProductosInTabsID = 50,
                            IsDeleted = false,
                            Orden = 50,
                            ProductosID = 50,
                            VetasTabsID = 5
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.TiposItems", b =>
                {
                    b.Property<int>("TiposItemsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TiposItemsID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TiposItemsID");

                    b.ToTable("TiposItems");

                    b.HasData(
                        new
                        {
                            TiposItemsID = 1,
                            IsDeleted = false,
                            Nombre = "Producto"
                        },
                        new
                        {
                            TiposItemsID = 2,
                            IsDeleted = false,
                            Nombre = "Servicio"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.VetasTabs", b =>
                {
                    b.Property<int>("VetasTabsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VetasTabsID"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("VetasTabsID");

                    b.ToTable("VetasTabs");

                    b.HasData(
                        new
                        {
                            VetasTabsID = 1,
                            Color = "#FF5733",
                            Icono = "home",
                            IsDeleted = false,
                            Nombre = "Inicio",
                            Orden = 1
                        },
                        new
                        {
                            VetasTabsID = 2,
                            Color = "#33FF57",
                            Icono = "paw",
                            IsDeleted = false,
                            Nombre = "Mascotas",
                            Orden = 2
                        },
                        new
                        {
                            VetasTabsID = 3,
                            Color = "#3357FF",
                            Icono = "cart",
                            IsDeleted = false,
                            Nombre = "Productos",
                            Orden = 3
                        },
                        new
                        {
                            VetasTabsID = 4,
                            Color = "#F3FF33",
                            Icono = "star",
                            IsDeleted = false,
                            Nombre = "Favoritos",
                            Orden = 4
                        },
                        new
                        {
                            VetasTabsID = 5,
                            Color = "#FF33F3",
                            Icono = "gift",
                            IsDeleted = false,
                            Nombre = "Ofertas",
                            Orden = 5
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.Personas", b =>
                {
                    b.Property<int>("PersonasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonasID"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PersonasID");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            PersonasID = 1,
                            Direccion = "Calle 123, Ciudad",
                            Email = "cliente@default.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Cliente Default",
                            Sexo = "u",
                            Telefono = "123-456-7890"
                        },
                        new
                        {
                            PersonasID = 2,
                            Direccion = "Calle 2",
                            Email = "ana@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Ana Pérez",
                            Sexo = "u",
                            Telefono = "809-111-2222"
                        },
                        new
                        {
                            PersonasID = 3,
                            Direccion = "Calle 3",
                            Email = "luis@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Luis Gómez",
                            Sexo = "u",
                            Telefono = "809-333-4444"
                        },
                        new
                        {
                            PersonasID = 4,
                            Direccion = "Calle 4",
                            Email = "maria@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "María López",
                            Sexo = "u",
                            Telefono = "809-555-6666"
                        },
                        new
                        {
                            PersonasID = 5,
                            Direccion = "Calle 5",
                            Email = "carlos@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Carlos Ruiz",
                            Sexo = "u",
                            Telefono = "809-777-8888"
                        },
                        new
                        {
                            PersonasID = 6,
                            Direccion = "Calle 6",
                            Email = "sofia@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Sofía Torres",
                            Sexo = "u",
                            Telefono = "809-999-0000"
                        },
                        new
                        {
                            PersonasID = 7,
                            Direccion = "Calle 7",
                            Email = "pedro@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Pedro Sánchez",
                            Sexo = "u",
                            Telefono = "809-121-2121"
                        },
                        new
                        {
                            PersonasID = 8,
                            Direccion = "Calle 8",
                            Email = "lucia@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Lucía Fernández",
                            Sexo = "u",
                            Telefono = "809-232-3232"
                        },
                        new
                        {
                            PersonasID = 9,
                            Direccion = "Calle 9",
                            Email = "miguel@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Miguel Castro",
                            Sexo = "u",
                            Telefono = "809-343-4343"
                        },
                        new
                        {
                            PersonasID = 10,
                            Direccion = "Calle 10",
                            Email = "valeria@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Valeria Jiménez",
                            Sexo = "u",
                            Telefono = "809-454-5454"
                        },
                        new
                        {
                            PersonasID = 11,
                            Direccion = "Calle 11",
                            Email = "javier@correo.com",
                            EstadoCivil = "",
                            Identificacion = "",
                            IsDeleted = false,
                            Nacionalidad = "",
                            Nombre = "Javier Ramírez",
                            Sexo = "u",
                            Telefono = "809-565-6565"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.PersonasRoles", b =>
                {
                    b.Property<int>("PersonasRolesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonasRolesID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PersonasRolesID");

                    b.HasIndex("PersonasID");

                    b.ToTable("PersonasRoles");
                });

            modelBuilder.Entity("PawfectMatch.Models.Proveedores", b =>
                {
                    b.Property<int>("ProveedoresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedoresID"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProveedoresID");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            ProveedoresID = 1,
                            Email = "proveedor@default.com",
                            IsDeleted = false,
                            Nombre = "Proveedor Default",
                            RNC = "000000000",
                            Telefono = "809-000-0000"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.Razas", b =>
                {
                    b.Property<int>("RazasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RazasID"));

                    b.Property<int?>("EspeciesID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RazasID");

                    b.HasIndex("EspeciesID");

                    b.ToTable("Razas");

                    b.HasData(
                        new
                        {
                            RazasID = 1,
                            EspeciesID = 2,
                            IsDeleted = false,
                            Nombre = "Chihuahua"
                        },
                        new
                        {
                            RazasID = 2,
                            EspeciesID = 2,
                            IsDeleted = false,
                            Nombre = "Bulldog"
                        },
                        new
                        {
                            RazasID = 3,
                            EspeciesID = 1,
                            IsDeleted = false,
                            Nombre = "Gato Naranja"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.RelacionSize", b =>
                {
                    b.Property<int>("RelacionSizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelacionSizeID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RelacionSizeID");

                    b.ToTable("RelacionSize");

                    b.HasData(
                        new
                        {
                            RelacionSizeID = 1,
                            IsDeleted = false,
                            Nombre = "Pequeño"
                        },
                        new
                        {
                            RelacionSizeID = 2,
                            IsDeleted = false,
                            Nombre = "Mediano"
                        },
                        new
                        {
                            RelacionSizeID = 3,
                            IsDeleted = false,
                            Nombre = "Grande"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.SeguimientoMascotas", b =>
                {
                    b.Property<int>("SeguimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeguimientoID"));

                    b.Property<int>("EstadoMascotaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVista")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MascotasAdopcionID")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.HasKey("SeguimientoID");

                    b.HasIndex("EstadoMascotaID");

                    b.HasIndex("MascotasAdopcionID");

                    b.HasIndex("PersonasID");

                    b.ToTable("SeguimientoMascotas");
                });

            modelBuilder.Entity("PawfectMatch.Models.Servicios.MascotasPersonas", b =>
                {
                    b.Property<int>("MascotasPersonasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MascotasPersonasID"));

                    b.Property<int?>("EspeciesID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonasID")
                        .HasColumnType("int");

                    b.Property<int?>("RazasID")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("MascotasPersonasID");

                    b.HasIndex("EspeciesID");

                    b.HasIndex("PersonasID");

                    b.HasIndex("RazasID");

                    b.ToTable("MascotasPersonas");

                    b.HasData(
                        new
                        {
                            MascotasPersonasID = 1,
                            IsDeleted = false,
                            Nombre = "Toby",
                            PersonasID = 2,
                            RazasID = 1,
                            Sexo = "m"
                        },
                        new
                        {
                            MascotasPersonasID = 2,
                            IsDeleted = false,
                            Nombre = "Bella",
                            PersonasID = 3,
                            RazasID = 2,
                            Sexo = "f"
                        },
                        new
                        {
                            MascotasPersonasID = 3,
                            IsDeleted = false,
                            Nombre = "Tom",
                            PersonasID = 4,
                            RazasID = 3,
                            Sexo = "m"
                        },
                        new
                        {
                            MascotasPersonasID = 4,
                            IsDeleted = false,
                            Nombre = "Lola",
                            PersonasID = 5,
                            RazasID = 1,
                            Sexo = "f"
                        },
                        new
                        {
                            MascotasPersonasID = 5,
                            IsDeleted = false,
                            Nombre = "Rex",
                            PersonasID = 6,
                            RazasID = 2,
                            Sexo = "m"
                        },
                        new
                        {
                            MascotasPersonasID = 6,
                            IsDeleted = false,
                            Nombre = "Nina",
                            PersonasID = 7,
                            RazasID = 3,
                            Sexo = "f"
                        },
                        new
                        {
                            MascotasPersonasID = 7,
                            IsDeleted = false,
                            Nombre = "Leo",
                            PersonasID = 8,
                            RazasID = 1,
                            Sexo = "m"
                        },
                        new
                        {
                            MascotasPersonasID = 8,
                            IsDeleted = false,
                            Nombre = "Maya",
                            PersonasID = 9,
                            RazasID = 2,
                            Sexo = "f"
                        },
                        new
                        {
                            MascotasPersonasID = 9,
                            IsDeleted = false,
                            Nombre = "Simón",
                            PersonasID = 10,
                            RazasID = 3,
                            Sexo = "m"
                        },
                        new
                        {
                            MascotasPersonasID = 10,
                            IsDeleted = false,
                            Nombre = "Daisy",
                            PersonasID = 11,
                            RazasID = 1,
                            Sexo = "f"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.Servicios.Servicios", b =>
                {
                    b.Property<int>("ServiciosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiciosID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TiposServiciosID")
                        .HasColumnType("int");

                    b.HasKey("ServiciosID");

                    b.HasIndex("TiposServiciosID");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("PawfectMatch.Models.Servicios.TiposServicios", b =>
                {
                    b.Property<int>("TiposServiciosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TiposServiciosID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TiposServiciosID");

                    b.ToTable("TiposServicios");

                    b.HasData(
                        new
                        {
                            TiposServiciosID = 1,
                            IsDeleted = false,
                            Nombre = "Consulta Veterinaria"
                        },
                        new
                        {
                            TiposServiciosID = 2,
                            IsDeleted = false,
                            Nombre = "Vacunación"
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.SolicitudesAdopciones", b =>
                {
                    b.Property<int>("SolicitudesAdopcionesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudesAdopcionesID"));

                    b.Property<int>("EstadoSolicitudID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MascotasAdopcionID")
                        .HasColumnType("int");

                    b.Property<int>("PersonasID")
                        .HasColumnType("int");

                    b.HasKey("SolicitudesAdopcionesID");

                    b.HasIndex("EstadoSolicitudID");

                    b.HasIndex("MascotasAdopcionID");

                    b.HasIndex("PersonasID");

                    b.ToTable("SolicitudesAdopciones");

                    b.HasData(
                        new
                        {
                            SolicitudesAdopcionesID = 1,
                            EstadoSolicitudID = 1,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 11,
                            PersonasID = 2
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 2,
                            EstadoSolicitudID = 2,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 12,
                            PersonasID = 3
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 3,
                            EstadoSolicitudID = 3,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 13,
                            PersonasID = 4
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 4,
                            EstadoSolicitudID = 4,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 14,
                            PersonasID = 5
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 5,
                            EstadoSolicitudID = 1,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 15,
                            PersonasID = 6
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 6,
                            EstadoSolicitudID = 2,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 16,
                            PersonasID = 7
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 7,
                            EstadoSolicitudID = 3,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 17,
                            PersonasID = 8
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 8,
                            EstadoSolicitudID = 4,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 18,
                            PersonasID = 9
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 9,
                            EstadoSolicitudID = 1,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 19,
                            PersonasID = 10
                        },
                        new
                        {
                            SolicitudesAdopcionesID = 10,
                            EstadoSolicitudID = 2,
                            Fecha = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MascotasAdopcionID = 20,
                            PersonasID = 11
                        });
                });

            modelBuilder.Entity("PawfectMatch.Models.TipoViviendas", b =>
                {
                    b.Property<int>("TipoViviendasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoViviendasID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TipoViviendasID");

                    b.ToTable("TipoViviendas");

                    b.HasData(
                        new
                        {
                            TipoViviendasID = 1,
                            IsDeleted = false,
                            Nombre = "Casa"
                        },
                        new
                        {
                            TipoViviendasID = 2,
                            IsDeleted = false,
                            Nombre = "Apartamento"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PawfectMatch.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PawfectMatch.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PawfectMatch.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.AdoptantesDetalles", b =>
                {
                    b.HasOne("PawfectMatch.Models.Personas", "Persona")
                        .WithMany("AdoptantesDetalles")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.TipoViviendas", "TipoVivienda")
                        .WithMany()
                        .HasForeignKey("TipoViviendasID");

                    b.Navigation("Persona");

                    b.Navigation("TipoVivienda");
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.HistorialAdopciones", b =>
                {
                    b.HasOne("PawfectMatch.Models.Adopciones.MascotasAdopcion", "MascotaAdopcion")
                        .WithMany()
                        .HasForeignKey("MascotasAdopcionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.SolicitudesAdopciones", "SolicitudAdopcion")
                        .WithMany()
                        .HasForeignKey("SolicitudesAdopcionesID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.SolicitudesAdopciones", null)
                        .WithMany("Historiales")
                        .HasForeignKey("SolicitudesAdopcionesID1");

                    b.Navigation("MascotaAdopcion");

                    b.Navigation("SolicitudAdopcion");
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.MascotasAdopcion", b =>
                {
                    b.HasOne("PawfectMatch.Models.Especies", null)
                        .WithMany("MascotasAdopcion")
                        .HasForeignKey("EspeciesID");

                    b.HasOne("PawfectMatch.Models.Estados", "Estado")
                        .WithMany("MascotasAdopcion")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Razas", "Razas")
                        .WithMany("MascotasAdopcion")
                        .HasForeignKey("RazasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.RelacionSize", "RelacionSize")
                        .WithMany("MascotasAdopcion")
                        .HasForeignKey("RelacionSizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Razas");

                    b.Navigation("RelacionSize");
                });

            modelBuilder.Entity("PawfectMatch.Models.Citas", b =>
                {
                    b.HasOne("PawfectMatch.Models.EstadosCitas", "EstadoCita")
                        .WithMany()
                        .HasForeignKey("EstadosCitasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Servicios.MascotasPersonas", "MascotaPersona")
                        .WithMany()
                        .HasForeignKey("MascotasPersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Personas", "Persona")
                        .WithMany("Citas")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCita");

                    b.Navigation("MascotaPersona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PawfectMatch.Models.HistoriasClinicas", b =>
                {
                    b.HasOne("PawfectMatch.Models.Servicios.MascotasPersonas", "MascotaPersona")
                        .WithMany()
                        .HasForeignKey("MascotasPersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Personas", "Veterinario")
                        .WithMany("HistoriasClinicas")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MascotaPersona");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.DetallesFacturas", b =>
                {
                    b.HasOne("PawfectMatch.Models.POS.Facturas", "Factura")
                        .WithMany("Detalles")
                        .HasForeignKey("FacturasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.POS.TiposItems", "TipoItem")
                        .WithMany("DetallesFacturas")
                        .HasForeignKey("TiposItemsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("TipoItem");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Facturas", b =>
                {
                    b.HasOne("PawfectMatch.Models.POS.EstadosPagos", "EstadoPago")
                        .WithMany("Facturas")
                        .HasForeignKey("EstadoPagoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Personas", "Persona")
                        .WithMany("Facturas")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPago");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Pagos", b =>
                {
                    b.HasOne("PawfectMatch.Models.POS.Facturas", "Factura")
                        .WithMany("Pagos")
                        .HasForeignKey("FacturasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Productos", b =>
                {
                    b.HasOne("PawfectMatch.Models.POS.CategoriasProductos", "CategoriaProducto")
                        .WithMany()
                        .HasForeignKey("CategoriasProductosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Proveedores", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedoresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProducto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.ProductosInTabs", b =>
                {
                    b.HasOne("PawfectMatch.Models.POS.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.POS.VetasTabs", "VetasTab")
                        .WithMany()
                        .HasForeignKey("VetasTabsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("VetasTab");
                });

            modelBuilder.Entity("PawfectMatch.Models.PersonasRoles", b =>
                {
                    b.HasOne("PawfectMatch.Models.Personas", "Persona")
                        .WithMany("Roles")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PawfectMatch.Models.Razas", b =>
                {
                    b.HasOne("PawfectMatch.Models.Especies", "Especie")
                        .WithMany()
                        .HasForeignKey("EspeciesID");

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("PawfectMatch.Models.SeguimientoMascotas", b =>
                {
                    b.HasOne("PawfectMatch.Models.Adopciones.EstadoMascota", "EstadoMascota")
                        .WithMany("Seguimientos")
                        .HasForeignKey("EstadoMascotaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Adopciones.MascotasAdopcion", "MascotaAdopcion")
                        .WithMany()
                        .HasForeignKey("MascotasAdopcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Personas", "Persona")
                        .WithMany("Seguimientos")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoMascota");

                    b.Navigation("MascotaAdopcion");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PawfectMatch.Models.Servicios.MascotasPersonas", b =>
                {
                    b.HasOne("PawfectMatch.Models.Especies", null)
                        .WithMany("MascotasPersonas")
                        .HasForeignKey("EspeciesID");

                    b.HasOne("PawfectMatch.Models.Personas", "Personas")
                        .WithMany("Mascotas")
                        .HasForeignKey("PersonasID");

                    b.HasOne("PawfectMatch.Models.Razas", "Razas")
                        .WithMany("MascotasPersonas")
                        .HasForeignKey("RazasID");

                    b.Navigation("Personas");

                    b.Navigation("Razas");
                });

            modelBuilder.Entity("PawfectMatch.Models.Servicios.Servicios", b =>
                {
                    b.HasOne("PawfectMatch.Models.Servicios.TiposServicios", "TipoServicio")
                        .WithMany()
                        .HasForeignKey("TiposServiciosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("PawfectMatch.Models.SolicitudesAdopciones", b =>
                {
                    b.HasOne("PawfectMatch.Models.EstadoSolicitud", "EstadoSolicitud")
                        .WithMany("SolicitudesAdopciones")
                        .HasForeignKey("EstadoSolicitudID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Adopciones.MascotasAdopcion", "MascotaAdopcion")
                        .WithMany()
                        .HasForeignKey("MascotasAdopcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawfectMatch.Models.Personas", "Persona")
                        .WithMany("SolicitudesAdopciones")
                        .HasForeignKey("PersonasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoSolicitud");

                    b.Navigation("MascotaAdopcion");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PawfectMatch.Models.Adopciones.EstadoMascota", b =>
                {
                    b.Navigation("Seguimientos");
                });

            modelBuilder.Entity("PawfectMatch.Models.Especies", b =>
                {
                    b.Navigation("MascotasAdopcion");

                    b.Navigation("MascotasPersonas");
                });

            modelBuilder.Entity("PawfectMatch.Models.EstadoSolicitud", b =>
                {
                    b.Navigation("SolicitudesAdopciones");
                });

            modelBuilder.Entity("PawfectMatch.Models.Estados", b =>
                {
                    b.Navigation("MascotasAdopcion");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.EstadosPagos", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.Facturas", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("PawfectMatch.Models.POS.TiposItems", b =>
                {
                    b.Navigation("DetallesFacturas");
                });

            modelBuilder.Entity("PawfectMatch.Models.Personas", b =>
                {
                    b.Navigation("AdoptantesDetalles");

                    b.Navigation("Citas");

                    b.Navigation("Facturas");

                    b.Navigation("HistoriasClinicas");

                    b.Navigation("Mascotas");

                    b.Navigation("Roles");

                    b.Navigation("Seguimientos");

                    b.Navigation("SolicitudesAdopciones");
                });

            modelBuilder.Entity("PawfectMatch.Models.Razas", b =>
                {
                    b.Navigation("MascotasAdopcion");

                    b.Navigation("MascotasPersonas");
                });

            modelBuilder.Entity("PawfectMatch.Models.RelacionSize", b =>
                {
                    b.Navigation("MascotasAdopcion");
                });

            modelBuilder.Entity("PawfectMatch.Models.SolicitudesAdopciones", b =>
                {
                    b.Navigation("Historiales");
                });
#pragma warning restore 612, 618
        }
    }
}
